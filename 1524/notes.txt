The number of subarrays of a given array with an odd sum is
determined by the number of even and odd numbers in the array.
Let A be the array with o odd numbers and e even numbers.
o>=1 otherwise the only possible sums are even.
Given any such subarray that only consists of odd numbers, adding any 
amount of even numbers will not change that property.
Hence the solution is the number of purely-odd-subarray solutions times
the number of subsets of even number, which is 2^e.
This remains true if there are no odd numbers, as that result will be 0.
Remains to determine the number n of purely-odd-subarrays.
WLOG we can assume that the array only consists of odd numbers to begin with.
data
o=0 -> n = 0
o=1 -> n = 1
o=2 -> n = 2
o=3 -> n = 4 = 3 choose 1 + 3 choose 3
o=4 -> n = 4 choose 1 + 4 choose 3 = 4 + 4 = 8
Proposition:
if o is even: n = sum_i=1^(o/2) (o choose 2*i-1)
if o is odd: n = sum_i=1^(o+1)/2 (o choose 2*i-1)
proof by complete induction n -> n+2
Let A be an array of n+2 odd numbers.
Case 1: n is even. Therefore, so is n+2. Subarrays with n+1 numbers will 
not have an odd sum. Therefore the largest subarrays with odd sums are The
array itself, and the n+2 choose n subarrays of length 
